{"version":3,"sources":["components/Users/Users.module.css","components/Profile/MyPosts/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","reportWebVitals.js","redux/dialogReducer.js","api/api.js","redux/profileReducer.js","components/Utilits/objectHelpers.js","redux/usersReduser.js","redux/auth-reducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Pagination/Pagination.jsx","images/photoIfEmpty.png","components/Users/User.jsx","components/Users/Users.jsx","images/Radio-1s-200px.svg","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.js","components/Profile/MyPosts/Post.jsx","components/Forms/AddPostForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.js","components/Forms/Login.js","App.js","index.js","components/Utilits/Validators.js","components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/common/Pagination/Pagination.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dialogsList","name","id","messages","isMy","text","dialogReducer","newState","state","action","type","newMessage","length","push","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pagesSize","get","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","setUserProfileAction","setStatusAction","posts","likes","profile","setStatus","profileReducer","newPost","updateObjectInArray","array","objPropName","newObjProp","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_PAGES_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROCESS","users","pagesCount","isFetching","followingProcess","followSuccess","unfollowSuccess","setPagesCount","count","toggleIsFetching","toggleFollowingProcess","userReducer","followed","current","filter","setUserDataAction","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profileData","dialogsData","usersData","usersReduser","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","classes","nav","to","activeClassName","active","href","friendsBlock","friendsImg","src","Pagination","portionSize","props","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPositionNum","rightPositionNum","cl","paginator","onClick","slice","page","onChangePages","User","unfollow","follow","photos","small","userPhoto","usersPhoto","disabled","some","Users","Preloader","preloader","UsersAPIComponent","pageNumber","getUsers","setCurrentPage","this","React","Component","mapDispatch","items","totalCount","UsersContainer","connect","Post","avatar","alt","message","maxLenght","maxLenghtCreator","reduxForm","minLenghtCreator","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","MyPosts","formData","addNewPost","newPostText","postsList","MyPostsContainer","p","newPostValue","textForNewPost","ProfileStatusWH","memo","editModeValue","setEditMode","useEffect","statusContainer","onDoubleClick","onBlur","autoFocus","value","onChange","e","currentTarget","ProfileInfo","large","fullName","descr","aboutMe","contacts","contact","unpackContacts","Profile","ProfileContainer","match","params","authUserId","history","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","error","Input","formSummaryError","stopSubmit","_error","DialogsContainer","lazy","App","initializedApp","path","render","Suspense","fallback","AppContainer","MainApp","StrictMode","basename","process","rerenderAll","ReactDOM","document","getElementById","getState","subscribe","max","min","input","meta","hasError","touched","formControl"],"mappings":"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","file":"static/js/main.f340a61c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__3z4oh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__3NoA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topImage\":\"ProfileInfo_topImage__1-Zgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__kv-o2\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nlet initialState = {\r\n    dialogsList: [\r\n        {\r\n            name: 'Madara',\r\n            id: 1,\r\n            messages: [\r\n                {\r\n                    id: 1,\r\n                    isMy: true,\r\n                    text: 'Hi Madara! I am Hokage!!'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    isMy: false,\r\n                    text: 'I am dark Hokage when it is was not mainstream'\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            name: 'Hosherama',\r\n            id: 2,\r\n        },\r\n        {\r\n            name: 'Djiraya',\r\n            id: 3,\r\n        },\r\n        {\r\n            name: 'Orochimaru',\r\n            id: 4,\r\n        },\r\n    ],\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    let newState\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE' :\r\n            let newMessage = {\r\n                id: state.dialogsList[0].messages.length,\r\n                isMy: true,\r\n                text: action.text\r\n            }\r\n            newState =  {...state}\r\n            newState.dialogsList[0].messages.push(newMessage);\r\n            return newState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '843b0579-cb00-4873-9e3e-0f4b5a48939c'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pagesSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data )\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data )\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use \"profileAPI.getProfile(..)\"')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status});\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe  = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nlet setUserProfileAction = 'profileData/SET-USER-PROFILE'\r\nlet setStatusAction = 'profileData/SET-STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            text: 'I am Naruto Uzumaki',\r\n            likes: 10,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'I will become Hocage!!',\r\n            likes: 17,\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST' :\r\n            let newPost = {\r\n                id: state.posts.length,\r\n                text: action.text,\r\n                likes: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case setUserProfileAction:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case setStatusAction:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setUserProfile = (profile) => ({type: setUserProfileAction, profile})\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let data = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(data))\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => ({type: setStatusAction, status})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) dispatch(setStatus(status))\r\n}\r\n\r\nexport default profileReducer;","\r\n\r\nexport const updateObjectInArray = (array, objPropName, userId, newObjProp ) => {\r\n    return array.map( user => {\r\n        if (user[objPropName] === userId) return {...user, ...newObjProp}\r\n        return user\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../components/Utilits/objectHelpers\";\r\n\r\nlet FOLLOW = 'users/FOLLOW'\r\nlet UNFOLLOW = 'users/FOLLOW'\r\nlet SET_USERS = 'users/SET_USERS'\r\nlet SET_PAGES_COUNT = 'users/SET_PAGES_COUNT'\r\nlet SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nlet TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nlet TOGGLE_FOLLOWING_PROCESS = 'users/TOGGLE_FOLLOWING_PROCESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pagesSize: 5,\r\n    pagesCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProcess: [],\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: [...updateObjectInArray(state.users, \"id\", action.userId, {followed: true})]\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: [...updateObjectInArray(state.users, \"id\", action.userId, {followed: false})],\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pagesCount: action.count\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.current\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n            followingProcess: action.isFetching\r\n                ? [...state.followingProcess, action.userId]\r\n                : state.followingProcess.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setPagesCount = (count) => ({type: SET_PAGES_COUNT, count})\r\nexport const setCurrentPage = (current) => ({type: SET_CURRENT_PAGE, current})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProcess = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_PROCESS ,isFetching,  userId})\r\n\r\nexport const requestUsers = (currentPage, pagesSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage, pagesSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setPagesCount(data.totalCount))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProcess(true, userId))\r\n    let data = await usersAPI.follow(userId)\r\n    if (data.resultCode == 0) dispatch(followSuccess(userId))\r\n    dispatch(toggleFollowingProcess(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProcess(true, userId))\r\n    let data = await usersAPI.unfollow(userId)\r\n    if (data.resultCode == 0) dispatch(unfollowSuccess(userId))\r\n    dispatch(toggleFollowingProcess(false, userId))\r\n}\r\n\r\nexport default userReducer;","import React from 'react'\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet setUserDataAction = 'auth/SET-USER-DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case setUserDataAction:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: setUserDataAction, payload: {userId, email, login, isAuth} })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.me()\r\n    if (data.resultCode == 0) {\r\n        return dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n    };\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ON-INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const activeInitialized = () => ({type: 'ON-INITIALIZED'})\r\nexport const initializedApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n    .then( () => {\r\n        dispatch(activeInitialized())\r\n    })\r\n}\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReduser from \"./usersReduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileData: profileReducer,\r\n    dialogsData: dialogReducer,\r\n    usersData: usersReduser,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div>\r\n              <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n              <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n              <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div>\r\n              <a href=\"/music\">Music</a>\r\n            </div>\r\n            <div>\r\n              <a href=\"/setting\">Settings</a>\r\n            </div>\r\n            <div className={classes.friendsBlock}>\r\n                <a href=\"/setting\">Friends</a>\r\n                <div className={classes.friendsImg}>\r\n                    <img src={'https://uprostim.com/wp-content/uploads/2021/03/saske-uchiha_00209.jpg'}/>\r\n                    <img src={'https://i.pinimg.com/originals/a1/5c/66/a15c660392c37658a752e6456b3a5956.jpg'}/>\r\n                    <img src={'https://i.pinimg.com/originals/59/be/41/59be41699dfeecfad8d57fa520f0b9fc.jpg'}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react'\r\nimport cl from './Pagination.module.css'\r\n\r\nlet Pagination = ({portionSize = 10,...props}) => {\r\n    let pagesCount = Math.ceil(props.pagesCount / props.pagesSize)\r\n    let pages = []\r\n    for (let i = 1; i < pagesCount; i++) pages.push(i)\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(Math.ceil(props.currentPage / 10))\r\n    let leftPositionNum = (portionNumber - 1) * portionSize + 1\r\n    let rightPositionNum = portionNumber * portionSize\r\n    return (\r\n    <div className={cl.paginator}>\r\n        {portionNumber > 1 && <button onClick={() =>{setPortionNumber(portionNumber - 1)}}>previos</button>}\r\n        {\r\n            pages.slice(leftPositionNum - 1, rightPositionNum - 1).map( page => {\r\n                return <button className={props.currentPage === page && cl.currentPage}\r\n                               onClick={() => {\r\n                                   props.onChangePages(page)\r\n                               }}>{page}</button>\r\n            })\r\n        }\r\n        {portionCount > portionNumber && <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button> }\r\n        <button onClick={() => {\r\n            setPortionNumber(Math.ceil(pagesCount / 10))\r\n        }}>END</button>\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Pagination","export default __webpack_public_path__ + \"static/media/photoIfEmpty.a64973ff.png\";","import React from 'react'\r\nimport cl from './Users.module.css'\r\nimport userPhoto from '../../images/photoIfEmpty.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingProcess, unfollow, follow}) => {\r\n    return <div key={user.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small ? user.photos.small\r\n                            : userPhoto} className={cl.usersPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingProcess.some(id => id == user.id)}\r\n                                  onClick={() => unfollow(user.id)}>Unfollow</button>\r\n                        : <button disabled={followingProcess.some(id => id == user.id)}\r\n                                  onClick={() => follow(user.id)}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n\r\n        <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n\r\n        <span>\r\n                <div>{'user.location.country'}</div>\r\n                <div>{'user.location.city'}</div>\r\n            </span>\r\n    </div>\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({onChangePages, currentPage, pagesCount, pagesSize,\r\n                 users, followingProcess, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <Pagination onChangePages={onChangePages} currentPage={currentPage}\r\n                        pagesSize={pagesSize} pagesCount={pagesCount} />\r\n\r\n            {\r\n                users.map(user => (\r\n                    <User user={user} followingProcess={followingProcess}\r\n                          unfollow={unfollow} follow={follow} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Users","export default __webpack_public_path__ + \"static/media/Radio-1s-200px.efca967e.svg\";","import React from 'react'\r\nimport preloader from '../../../images/Radio-1s-200px.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\nexport default Preloader","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    setPagesCount,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/usersReduser\";\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pagesSize)\r\n    }\r\n\r\n    onChangePages = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pagesSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() { return <>\r\n        {this.props.isFetching ? <Preloader/>\r\n            : <Users\r\n                pagesCount={this.props.pagesCount}\r\n                pagesSize={this.props.pagesSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                onChangePages={this.onChangePages}\r\n                followingProcess={this.props.followingProcess}\r\n\r\n            />\r\n        }\r\n    </>}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersData.users,\r\n        pagesSize: state.usersData.pagesSize,\r\n        pagesCount: state.usersData.pagesCount,\r\n        currentPage: state.usersData.currentPage,\r\n        isFetching: state.usersData.isFetching,\r\n        followingProcess: state.usersData.followingProcess,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => dispatch(followAC(userId)),\r\n//         unfollow: (userId) => dispatch(unfollowAC(userId)),\r\n//         setUsers: (users) => dispatch(setUsersAC(users)),\r\n//         setPagesCount: (count) => dispatch(setPagesCountAC(count)),\r\n//         setCurrentPage: (current) => dispatch(setCurrentPageAC(current)),\r\n//         toggleIsFetching: (isFetching) => dispatch(toggleIsFetchingAC(isFetching)),\r\n//     }\r\n// }\r\nlet mapDispatch = {follow, unfollow, setPagesCount, setCurrentPage, toggleIsFetching, getUsers: requestUsers}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatch )(UsersAPIComponent)","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.avatar}>\r\n            <img src=\"https://pm1.narvii.com/6718/f52198b73c2d4fe35e1abfa1840ce5afda28b3cb_hq.jpg\" alt=\"\" />\r\n            <div>{props.message}</div>\r\n            <div>{props.likes} people like this</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, minLenghtCreator, requiredField} from \"../Utilits/Validators\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\n\r\nlet maxLenght = maxLenghtCreator(10)\r\nlet minLenght = minLenghtCreator(10)\r\n\r\nconst AddPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'new post text..'} name={'newPostText'} component={Textarea}\r\n                   validate={ [ requiredField, maxLenght ] }/>\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({form: 'newPost'})(AddPost)","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post'\r\nimport AddNewPostForm from '../../Forms/AddPostForm'\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let onSaveNewPost = (formData) => {\r\n        props.addNewPost(formData.newPostText)\r\n    }\r\n    return (\r\n        <div>\r\n            My post\r\n            < AddNewPostForm onSubmit={onSaveNewPost} />\r\n\r\n            {props.postsList}\r\n        </div>\r\n    )\r\n}\r\nexport default MyPosts","import React from 'react'\r\nimport Post from './MyPosts/Post'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    let postsList = state.profileData.posts.map(p => <Post message={p.text} likes={p.likes}/>);\r\n    return {\r\n        postsList,\r\n        newPostValue: state.profileData.textForNewPost\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (text) => dispatch({type: 'ADD-POST', text})\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, {useEffect, useState} from \"react\";\r\nimport cl from'./ProfileStatus.module.css'\r\n\r\nconst ProfileStatusWH = React.memo((props) => {\r\n\r\n    let [editModeValue, setEditMode] = useState((false))\r\n    let [status, setStatus] = useState((props.status))\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editModeValue && <div className={cl.statusContainer} onDoubleClick={activateEditMode}>\r\n                <span>{status}</span>\r\n            </div>}\r\n\r\n            {editModeValue &&  <div onBlur={deactivateEditMode}>\r\n                <input autoFocus={true} value={status} onChange={onStatusChange}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ProfileStatusWH","import React from \"react\";\r\nimport cl from'./ProfileStatus.module.css'\r\nimport {profileAPI, usersAPI} from \"../../../api/api\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps != this.props || nextState != this.state\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                {(!this.state.editMode)\r\n                    ? <div className={cl.statusContainer} onDoubleClick={this.activateEditMode}>\r\n                        <span >{this.state.status}</span>\r\n                    </div>\r\n                    : <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport cl from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWH from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let unpackContacts = (contacts) => {\r\n        let array = []\r\n        for (let contact in contacts) {\r\n            if (contacts.contact) array.push(<li><a href={contacts.contact}>{contact}</a></li>)\r\n        }\r\n        return array\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img className={cl.topImage} alt={' '}*/}\r\n            {/*         src=\"https://pbs.twimg.com/profile_banners/1227823646233767936/1600997930/1500x500\"/>*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <img alt={\" \"} src={props.profile.photos.large}/>\r\n            </div>\r\n            <div>\r\n                <span>\r\n                    Name: {props.profile.fullName}\r\n                </span>\r\n            </div>\r\n            < ProfileStatusWH status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={cl.descr}>\r\n                <h4>{props.profile.aboutMe}</h4>\r\n                <h3>Contacts</h3>\r\n                <ul>\r\n                    {unpackContacts(props.profile.contacts)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport MyPostsContainer from './MyPostsContainer'\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile}\r\n                        status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileData.profile,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profileData.status,\r\n    authUserId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)\r\n(ProfileContainer)","import React from 'react'\r\nimport cl from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={cl.header}>\r\n      <img src='https://s3.amazonaws.com/static.hackingui.com/2014/11/side-img-solo.png'/>\r\n\r\n      <div className={cl.loginBlock}>\r\n          {props.isAuth ? <div>{props.login}  <button onClick={props.logout}>Log Out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>\r\n          }\r\n      </div>\r\n    </header>\r\n    )\r\n    \r\n}\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout,} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createFieldTeg, Input} from \"../common/FormControls/FormControls\";\r\nimport {requiredField} from \"../Utilits/Validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport cl from '../common/FormControls/FormControls.module.css'\r\n\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    let onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if  (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input}\r\n                validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} type={'password'}\r\n                       component={Input}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={'rememberMe'} component={Input} />Remember ME\r\n            </div>\r\n            {error && <div className={cl.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet mapStateToProps = (state) => ({isAuth: state.auth.isAuth})\r\nexport default connect( mapStateToProps, {login})(Login)","import React, {Component} from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Forms/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializedApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializedApp()\n    }\n    render() {\n        if (!this.props.initialized) return < Preloader />\n\n        return (\n                <div className=\"app-wrapper\">\n\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs' render={() => {\n                            return <React.Suspense fallback={<div>Loading...</div>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        }}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/music'/>\n                        <Route path='/setting'/>\n                    </div>\n                </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({initialized: state.app.initialized})\n\nlet AppContainer = compose(connect(mapStateToProps, {initializedApp}), withRouter)(App)\n\nconst MainApp = () => {\n    return <React.StrictMode>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>\n}\n\nexport default MainApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport MainApp from \"./App\";\n\n\nlet rerenderAll = (state) => {\n    ReactDOM.render(<MainApp/>, document.getElementById('root') );\n}\n\nrerenderAll(store.getState());\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <Provider store={store}>\n//             <App/>\n//         </Provider>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\nstore.subscribe(() => {\n    let state = store.getState()\n    rerenderAll(state)\n})\n\n// store.rerenderAll()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nexport const requiredField = value => {\r\n    if (value) return undefined\r\n    return 'Field is required!'\r\n\r\n}\r\n// export const maxLenght30 = value => {\r\n//     if (value && value.length > )\r\n// }\r\nexport const maxLenghtCreator = (max) => value => {\r\n    if (value && value.length > max) return 'Max lenght is ' + max\r\n    return undefined\r\n}\r\nexport const minLenghtCreator = (min) => {\r\n    return value => {\r\n        if (value && value.length < min) return 'Min lenght is ' + min\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__Jj3JK\",\"error\":\"FormControls_error__1BaAo\",\"formSummaryError\":\"FormControls_formSummaryError__1dfBF\"};","import React from \"react\";\r\nimport cl from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {requiredField} from \"../../Utilits/Validators\";\r\n\r\nexport const Input = ({input, meta,...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={cl.formControl + ' ' + (hasError ? cl.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = ({input, meta,...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={cl.formControl + ' ' + (hasError ? cl.error : '')}>\r\n            <textarea {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__35rHm\",\"active\":\"Navbar_active__1mR_S\",\"friendsBlock\":\"Navbar_friendsBlock__h9dE1\",\"friendsImg\":\"Navbar_friendsImg__1C7lI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"ProfileStatus_statusContainer__1qWm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numButtons\":\"Pagination_numButtons__1AQUz\",\"currentPage\":\"Pagination_currentPage__2tmaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2n1g_\",\"loginBlock\":\"Header_loginBlock__1rQdz\"};"],"sourceRoot":""}