{"version":3,"sources":["components/Dialogs/DialogItem/Dialog.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Messages.module.css","components/Dialogs/DialogItem/Dialog.jsx","components/Forms/Message.js","components/Dialogs/Dialogs.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","Dialog","props","className","cl","container","to","id","dialog","activeClassName","active","name","maxLenght","maxLenghtCreator","AddMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","Dialogs","dialogsFull","dialogsList","messages","messagesWithOne","formData","addNewMessage","messageText","Message","isMy","box","text","compose","connect","state","dialogsData","map","user","sms","newMessageValue","newMessageText","isAuth","auth","dispatch","type","Component","RedirectComponent","this","React"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,UAAY,4B,oBCA9FD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,oBCAvJD,EAAOC,QAAU,CAAC,IAAM,sBAAsB,KAAO,uBAAuB,KAAO,yB,6FCUpEC,EAPA,SAACC,GACZ,OACI,qBAAKC,UAAWC,IAAGC,UAAnB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIJ,UAAWC,IAAGI,OAAQC,gBAAiBL,IAAGM,OAA/E,SAAwFR,EAAMS,U,oDCFtGC,EAAYC,YAAiB,KAWlBC,EADQC,YAAU,CAACC,KAAM,WAAjBD,EATH,SAACb,GACjB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,YAAa,YAAaC,UAAWC,IAAUX,KAAM,cAC5DY,SAAU,CAACC,IAAeZ,KAC1B,gDCaGa,EApBC,SAACvB,GAIb,OACI,sBAAKC,UAAWC,IAAGsB,YAAnB,UAEI,qBAAKvB,UAAWC,IAAGuB,YAAnB,SACKzB,EAAMyB,cAGX,sBAAKxB,UAAWC,IAAGwB,SAAnB,UACI,8BAAM1B,EAAM2B,kBACZ,cAAE,EAAF,CAAiBZ,SAXT,SAACa,GAAD,OAAc5B,EAAM6B,cAAcD,EAASE,uB,kBCapDC,EAhBC,SAAC/B,GACb,OAAIA,EAAMgC,KAEF,qBAAK/B,UAAS,UAAKC,IAAG+B,IAAR,YAAe/B,IAAG8B,MAAhC,SACI,mBAAG/B,UAAWC,IAAGgC,KAAjB,SAAwBlC,EAAMkC,SAKlC,qBAAKjC,UAAWC,IAAG+B,IAAnB,SACI,mBAAGhC,UAAWC,IAAGgC,KAAjB,SAAwBlC,EAAMkC,U,8DCa/BC,sBACXC,aAjBkB,SAACC,GAGnB,MAAO,CACHZ,YAHcY,EAAMC,YAAYb,YAAYc,KAAK,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAQ/B,KAAM+B,EAAK/B,KAAMJ,GAAImC,EAAKnC,QAI5FsB,gBAHkBU,EAAMC,YAAYb,YAAY,GAAGC,SAASa,KAAI,SAAAE,GAAG,OAAK,cAAC,EAAD,CAASpC,GAAIoC,EAAIpC,GAAI2B,KAAMS,EAAIT,KAAME,KAAMO,EAAIP,UAIvHQ,gBAAiBL,EAAMC,YAAYK,eACnCC,OAAQP,EAAMQ,KAAKD,WAGF,SAACE,GACtB,MAAO,CAACjB,cAAe,SAACK,GAAD,OAAUY,EAAS,CAACC,KAAM,cAAeb,eClBpC,SAACc,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKlD,MAAM4C,OACT,cAACI,EAAD,eAAeE,KAAKlD,QADI,cAAC,IAAD,CAAUI,GAAI,eAHV,GACX+C,IAAMH,WAMtC,OAAOC,IDgBId,CAGdZ","file":"static/js/3.c19cc95d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__GHQDg\",\"active\":\"Dialog_active__eHYLz\",\"container\":\"Dialog_container__URp0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsFull\":\"Dialogs_dialogsFull__1gNFd\",\"dialogsList\":\"Dialogs_dialogsList__3biaN\",\"messages\":\"Dialogs_messages___Ce-c\",\"message\":\"Dialogs_message__1wTVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Messages_box__3REEx\",\"text\":\"Messages_text__jmrhk\",\"isMy\":\"Messages_isMy__1yLk2\"};","import React from 'react'\r\nimport cl from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={cl.container}>\r\n            <NavLink to={'/dialogs/' + props.id} className={cl.dialog} activeClassName={cl.active}>{props.name}</NavLink>\r\n        </div>\r\n        )\r\n}\r\nexport default Dialog","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLenghtCreator, requiredField} from \"../Utilits/Validators\";\r\n\r\nlet maxLenght = maxLenghtCreator(100)\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Hi human!'} component={Textarea} name={'messageText'}\r\n            validate={[requiredField, maxLenght]} />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageForm = reduxForm({form: 'message'})(MessageForm)\r\nexport default AddMessageForm\r\n\r\n","import React from 'react'\r\nimport cl from './Dialogs.module.css'\r\nimport NewMessageForm from '../Forms/Message'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onSendMessage = (formData) => props.addNewMessage(formData.messageText)\r\n\r\n    return (\r\n        <div className={cl.dialogsFull}>\r\n\r\n            <div className={cl.dialogsList}>\r\n                {props.dialogsList}\r\n            </div>\r\n\r\n            <div className={cl.messages}>\r\n                <div>{props.messagesWithOne}</div>\r\n                < NewMessageForm onSubmit={onSendMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport cl from './Messages.module.css'\r\n\r\nconst Message = (props) => {\r\n    if (props.isMy) {\r\n        return (\r\n            <div className={`${cl.box} ${cl.isMy}`}>\r\n                <p className={cl.text}>{props.text}</p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={cl.box}>\r\n                <p className={cl.text}>{props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Message","import React from 'react'\r\nimport Dialog from \"./DialogItem/Dialog\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport Message from \"./Message/Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    let dialogsList = state.dialogsData.dialogsList.map( user => (<Dialog name={user.name} id={user.id} />))\r\n    let messagesWithOne = state.dialogsData.dialogsList[0].messages.map(sms => (<Message id={sms.id} isMy={sms.isMy} text={sms.text}/>))\r\n    return {\r\n        dialogsList,\r\n        messagesWithOne,\r\n        newMessageValue: state.dialogsData.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {addNewMessage: (text) => dispatch({type: 'ADD-MESSAGE', text})}\r\n}\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withAuthRedirect(Dialogs))\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs)","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent\r\n}"],"sourceRoot":""}